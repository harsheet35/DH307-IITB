#!/bin/bash

# Define directories for input and output
data_dir="/home/user/Desktop/Harsheet_DH307/Data/E-MTAB-9950"
fastqc_output_dir="/home/user/Desktop/Harsheet_DH307/fastqc_output"
trimmed_output_dir="/home/user/Desktop/Harsheet_DH307/trimmed_data"
hisat2_output_dir="/home/user/Desktop/Harsheet_DH307/HISAT2_output"
stringtie_output_dir="/home/user/Desktop/Harsheet_DH307/StringTie_output"
reference_annotation="/home/user/Desktop/Harsheet_DH307/grch38/genome.gtf"

# Step 1: Run FastQC on data in each subfolder
for sample_dir in "$data_dir"/*; do
    sample_name=$(basename "$sample_dir")
    
    # Create an output directory for FastQC if it doesn't exist
    mkdir -p "$fastqc_output_dir/$sample_name"
    
    # Execute FastQC on data in each subfolder
    fastqc "$sample_dir"/* -o "$fastqc_output_dir/$sample_name"
done

# Step 2: Trim data using Trimmomatic
for sample_dir in "$data_dir"/*; do
    sample_name=$(basename "$sample_dir")
    
    # Create a subdirectory for each sample in the trimmed output directory
    mkdir -p "$trimmed_output_dir/$sample_name"

    # Loop through each pair of input files for Trimmomatic
    for file1 in "$sample_dir"/*_1.fastq.gz; do
        file2="${file1%_1.fastq.gz}_2.fastq.gz"
        base_name=$(basename "$file1" _1.fastq.gz)

        # Run Trimmomatic for each pair of input files
        java -jar Trimmomatic-0.39/trimmomatic-0.39.jar PE -threads 4 "$file1" "$file2" \
            "$trimmed_output_dir/$sample_name/${base_name}_output_1_paired.fastq.gz" "$trimmed_output_dir/$sample_name/${base_name}_output_1_unpaired.fastq.gz" \
            "$trimmed_output_dir/$sample_name/${base_name}_output_2_paired.fastq.gz" "$trimmed_output_dir/$sample_name/${base_name}_output_2_unpaired.fastq.gz" \
            TRAILING:10 -phred33
        
        # Remove unpaired files generated by Trimmomatic
        rm "$trimmed_output_dir/$sample_name/${base_name}_output_1_unpaired.fastq.gz"
        rm "$trimmed_output_dir/$sample_name/${base_name}_output_2_unpaired.fastq.gz"
    done
done

# Step 3: Run HISAT2 and create .bam files sample-wise
for sample_dir in "$trimmed_output_dir"/*; do
    sample_name=$(basename "$sample_dir")

    # Create a subdirectory for each sample in the HISAT2 output directory
    mkdir -p "$hisat2_output_dir/$sample_name"

    # Loop through each pair of trimmed FASTQ files for HISAT2
    for file1 in "$sample_dir"/*_1_paired.fastq.gz; do
        file2="${file1%_1_paired.fastq.gz}_2_paired.fastq.gz"
        base_name=$(basename "$file1" _1_paired.fastq.gz)

        # Run HISAT2 for each pair of trimmed FASTQ files and create a .bam file
        hisat2 -q -x grch38/genome -1 "$file1" -2 "$file2" -S "$hisat2_output_dir/$sample_name/${base_name}.sam"
        samtools view -bS "$hisat2_output_dir/$sample_name/${base_name}.sam" -o "$hisat2_output_dir/$sample_name/${base_name}.bam"
        
        # Remove intermediate and unneeded files, sort the .bam file by position
        rm "$trimmed_output_dir/$sample_name/${base_name}_1_paired.fastq.gz" "$trimmed_output_dir/$sample_name/${base_name}_2_paired.fastq.gz" "$hisat2_output_dir/$sample_name/${base_name}.sam"
        samtools sort "$hisat2_output_dir/$sample_name/${base_name}.bam" -o "$hisat2_output_dir/$sample_name/${base_name}.sorted.bam"
        mv "$hisat2_output_dir/$sample_name/${base_name}.sorted.bam" "$hisat2_output_dir/$sample_name/final_merged.bam"
        samtools index "$hisat2_output_dir/$sample_name/final_merged.bam"
    done
    echo "HISAT2 finished processing files for $sample_name."
done

# Step 4: Run StringTie for transcript assembly
for sample_dir in "$hisat2_output_dir"/*; do
    # Check if the directory contains the final merged BAM file
    if [ -f "$sample_dir/final_merged.bam" ]; then
        sample_name=$(basename "$sample_dir")

        # Run StringTie for the merged BAM file to generate GTF file
        stringtie "$sample_dir/final_merged.bam" -o "$stringtie_output_dir/${sample_name}.gtf" -G "$reference_annotation" -e
        
        # Remove the merged BAM file after transcript assembly
        rm "$sample_dir/final_merged.bam"
    else
        echo "Skipping $sample_dir as it does not contain the final merged BAM file."
    fi
done

python prepDE.py -i sample_lst.txt -g gene_count_matrix.csv -t transcript_count_matrix.csv